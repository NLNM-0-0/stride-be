name: Deploy to VPS

on:
  push:
    branches: [ feature/auto-deploy-to-vps ]

jobs:
  build-gateway:
    uses: ./.github/workflows/api-gateway-build.yml
    secrets: inherit

  build-bridge-ms:
    uses: ./.github/workflows/bridge-service-build.yml
    secrets: inherit

  build-core-ms:
    uses: ./.github/workflows/core-service-build.yml
    secrets: inherit

  build-identity-ms:
    uses: ./.github/workflows/identity-service-build.yml
    secrets: inherit

  build-profile-ms:
    uses: ./.github/workflows/profile-service-build.yml
    secrets: inherit

  build-route-ms:
    uses: ./.github/workflows/route-service-build.yml
    secrets: inherit

  deploy-to-vps:
    needs: [
      build-gateway,
      build-bridge-ms,
      build-core-ms,
      build-identity-ms,
      build-profile-ms,
      build-route-ms
    ]
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e
          
            cd stride

            echo "Stopping and removing containers..."
            docker-compose down --volumes --remove-orphans

            echo "Removing all unused images, containers, volumes, and networks..."
            docker system prune -af --volumes

            echo "Pulling fresh images..."
            docker-compose pull

            echo "Starting containers..."
            docker-compose up -d
          EOF

  ping-bridge-service:
    needs: [ deploy-to-vps ]
    runs-on: ubuntu-latest
    steps:
      - name: Ping bridge-service until healthy
        run: |
          echo "Pinging bridge-service..."
          URL="http://${{ secrets.VPS_HOST }}:8080/api/v1/bridge/ping"
          echo "Calling URL: $URL"

          for i in {1..100}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Response status: $STATUS"

            if [ "$STATUS" -eq 200 ]; then
              echo "bridge-ms is healthy"
              exit 0
            fi

            echo "bridge-ms is not ready yet..."
            sleep 5
          done

          echo "bridge-ms did not become healthy in time."
          exit 1

  ping-core-service:
    needs: [ deploy-to-vps ]
    runs-on: ubuntu-latest
    steps:
      - name: Ping core-service until healthy
        run: |
          echo "Pinging core-service..."
          URL="http://${{ secrets.VPS_HOST }}:8080/api/v1/core/ping"
          echo "Calling URL: $URL"

          for i in {1..100}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Response status: $STATUS"

            if [ "$STATUS" -eq 200 ]; then
              echo "core-ms is healthy"
              exit 0
            fi

            echo "core-ms is not ready yet..."
            sleep 5
          done

          echo "core-ms did not become healthy in time."
          exit 1

  ping-identity-service:
    needs: [ deploy-to-vps ]
    runs-on: ubuntu-latest
    steps:
      - name: Ping identity-service until healthy
        run: |
          echo "Pinging identity-service..."
          URL="http://${{ secrets.VPS_HOST }}:8080/api/v1/identity/ping"
          echo "Calling URL: $URL"

          for i in {1..100}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Response status: $STATUS"

            if [ "$STATUS" -eq 200 ]; then
              echo "identity-ms is healthy"
              exit 0
            fi

            echo "identity-ms is not ready yet..."
            sleep 5
          done

          echo "identity-ms did not become healthy in time."
          exit 1

  ping-profile-service:
    needs: [ deploy-to-vps ]
    runs-on: ubuntu-latest
    steps:
      - name: Ping profile-service until healthy
        run: |
          echo "Pinging profile-service..."
          URL="http://${{ secrets.VPS_HOST }}:8080/api/v1/profile/ping"
          echo "Calling URL: $URL"

          for i in {1..100}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Response status: $STATUS"

            if [ "$STATUS" -eq 200 ]; then
              echo "profile-ms is healthy"
              exit 0
            fi

            echo "profile-ms is not ready yet..."
            sleep 5
          done

          echo "profile-ms did not become healthy in time."
          exit 1

  ping-route-service:
    needs: [deploy-to-vps]
    runs-on: ubuntu-latest
    steps:
      - name: Ping route-service until healthy
        run: |
          echo "Pinging route-service..."
          URL="http://${{ secrets.VPS_HOST }}:8080/api/v1/route/ping"
          echo "Calling URL: $URL"
  
          for i in {1..100}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Response status: $STATUS"
          
            if [ "$STATUS" -eq 200 ]; then
              echo "route-ms is healthy"
              exit 0
            fi
          
            echo "route-ms is not ready yet..."
            sleep 5
          done
  
          echo "route-ms did not become healthy in time."
          exit 1