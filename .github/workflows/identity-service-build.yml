name: Build and push identity-ms image

on:
  workflow_call:
    inputs:
      skip_diff_check:
        required: false
        type: boolean
        default: false
      version:
        required: false
        type: string

jobs:
  build-identity:
    runs-on: ubuntu-latest
    name: Build identity-ms only if it changed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if identity-service has changed
        id: check_diff
        run: |
          if [ "${{ inputs.skip_diff_check }}" == "true" ]; then
            echo "Skipping diff check as requested."
            echo "changed=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            echo "Diffing between $BASE_SHA and $HEAD_SHA"

            git fetch --no-tags --prune --depth=1 origin +$BASE_SHA:$BASE_SHA +$HEAD_SHA:$HEAD_SHA

            if git diff --quiet $BASE_SHA $HEAD_SHA -- identity-service; then
              echo "No changes in identity-service"
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected in identity-service"
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
            echo "Checking differences between current branch ($CURRENT_BRANCH) and origin/$CURRENT_BRANCH"

            git fetch origin $CURRENT_BRANCH

            if git diff --quiet origin/$CURRENT_BRANCH..HEAD -- identity-service; then
              echo "No changes detected in identity-service."
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected in identity-service."
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Set up SSH key for stride-config
        if: steps.check_diff.outputs.changed == 'true'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STRIDE_CONFIG_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
          echo "Host github.com" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config
          echo "  IdentitiesOnly yes" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Test SSH connection (optional debug)
        if: steps.check_diff.outputs.changed == 'true'
        run: |
          ssh -T git@github.com || echo "SSH test failed"

      - name: Clone private repo with sensitive files
        if: steps.check_diff.outputs.changed == 'true'
        run: |
          git clone git@github.com:NLNM-0-0/stride-config.git /tmp/private-repo

      - name: Copy sensitive files from private repo
        if: steps.check_diff.outputs.changed == 'true'
        run: |
          mkdir -p ./identity-service/src/main/resources
          echo "Listing contents of /tmp/private-repo/backend/identity"
          ls -R /tmp/private-repo/backend/identity
          cp -r /tmp/private-repo/backend/identity ./identity-service/src/main/resources
          echo "Listing contents of ./identity-service/src/main/resources"
          ls -R ./identity-service/src/main/resources

      - name: Log in to Docker Hub
        if: steps.check_diff.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Build
        if: steps.check_diff.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Determine Docker image version
        if: steps.check_diff.outputs.changed == 'true'
        id: get_version
        run: |
          IMAGE="nlnm/stride-gateway"

          if [ -n "${{ inputs.version }}" ]; then
            echo "Custom version provided: ${{ inputs.version }}"
            echo "new_tag=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "No custom version provided. Auto-generating version..."

            TAG=$(curl -s -f https://hub.docker.com/v2/repositories/${IMAGE}/tags/?page_size=100 | \
              jq -r '.results[].name' 2>/dev/null | \
              grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | \
              sort -V | tail -n 1 || echo "")

            if [ -z "$TAG" ]; then
              echo "No version tag found. Using 0.0.1"
              NEW_TAG="0.0.1"
            else
              echo "Latest tag: $TAG"
              IFS='.' read -r MAJOR MINOR PATCH <<< "$TAG"
              PATCH=$((PATCH + 1))
              NEW_TAG="$MAJOR.$MINOR.$PATCH"
            fi

            echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Build and push identity-ms
        if: steps.check_diff.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./identity-service
          file: ./identity-service/deploy/prod.dockerfile
          push: true
          tags: |
            nlnm/stride-identity-ms:latest
            nlnm/stride-identity-ms:${{ steps.get_version.outputs.new_tag }}
          build-args: |
            GITHUB_USERNAME=${{ secrets.GITHUB_USERNAME }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            SPRING_PROFILES_ACTIVE=prod